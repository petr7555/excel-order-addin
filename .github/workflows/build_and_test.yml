name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # This workflow contains a single job called "Build"
  Build:
    runs-on: [windows-latest]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    # Install dependecies
    - name: Restore NuGet packages
      run: nuget restore ExcelOrderAddIn.sln

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        [IO.File]::WriteAllBytes(".\ExcelOrderAddIn\PetrJanikExcelOrderAddIn.pfx", $pfx_cert_byte)
        
    - name: Build the Solution
      run: msbuild ExcelOrderAddIn.sln /p:Configuration=Release
      
    - name: Run tests
      run: |
        $nunit_console = "${env:userprofile}" + "\.nuget\packages\nunit.consolerunner\3.12.0\tools\"
        $env:Path = $env:Path + ";$nunit_console"
        nunit3-console.exe .\Tests\bin\Debug\net48\Tests.dll
